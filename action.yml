name: Love actions for testing
description: Automatic tests for LÃ–VE based games
branding:
  icon: "heart"
  color: "gray-dark"
inputs:
  font-path:
    description: |
      Font path
      Would be used in font coverage tests
    required: false
  language-folder:
    description: |
      Path to the language folder
      Would be used in font coverage tests
    required: false
  love-package:
    description: |
      Love package
      Would be used for gaming logic tests
    required: false
    default: "./game.love"
  source-folder:
    description: |
      Top folder of the game sources
      Would be used to check grammar errors
    required: false
    default: "."
  strict:
    description: |
      Strict mode
      Would fail the tests if font coverage is not 100%
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Install luajit
      shell: bash
      run: |
        sudo apt-get install luajit -y
    - name: Check all lua files are valid
      shell: luajit {0}
      run: |
        local files = assert(io.popen "find ${{ inputs.source-folder }} -name '*.lua' -not -path '*/.git/*'")
        local errors = 0
        for file in files:lines() do
          local f, error = loadfile(file)
          if not f then
            print(error)
            errors = errors + 1
          end
        end
        files:close()

        if errors > 0 then
          print(("%d syntax error(s) found."):format(errors))
          os.exit(1)
        else
          print("No syntax error found.")
        end
    - name: Prepare FontTools
      if: "${{ inputs.font-path != '' && inputs.language-folder != ''}}"
      shell: bash
      run: |
        pip install fonttools
    - name: Check all characters are in the font
      if: "${{ inputs.font-path != '' && inputs.language-folder != ''}}"
      shell: python3 {0}
      run: |
        from fontTools.ttLib import TTFont
        from pathlib import Path

        font = TTFont("${{ inputs.font-path }}")
        keys = set(font.getBestCmap().keys())

        missing = []
        for file in Path("${{ inputs.language-folder }}").glob("*.lua"):
          for i, line in enumerate(file.read_text().splitlines()):
            for char in line:
              if ord(char) not in keys:
                missing.append((char, file, i+1))

        if missing:
          print("Missing characters:")
          for char, file, i in missing:
            print(f"'{char}'({ord(char):x}) in {file} at line {i} " \
                  f"(${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/{file}#L{i})")
          if "${{ inputs.strict }}" == "true":
            exit(1)
        else:
          print("All characters are present in the font.")
